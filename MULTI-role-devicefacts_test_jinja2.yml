---

- hosts: all
  any_errors_fatal: true
  connection: local
  gather_facts: false
  collections:
  - f5networks.f5_modules
  environment:
    https_proxy: ''
    http_proxy: ''
    
  vars:
    bigip_provider:
      user: "{{ user }}"
      password: "{{ password }}"
      server: "{{ ansible_host }}"
      server_port: 443
      validate_certs: false
      no_f5_teem: yes
    is_active: "{{ bigip_gather_var.devices | selectattr('self', 'equalto', 'yes') | map(attribute='failover_state') | first == 'active' }}"
    failover_device_group: "{{ bigip_gather_var.device_groups | selectattr('type', 'equalto', 'sync-failover')  | map(attribute='name') | first | default ('None') }}"

    #email settings
    email_subject: Device_Status
    email_host: smtp.gmail.com
    email_from: system@gmail.com
    email_to: <username>@gmail.com

    csv_path: /tmp
    csv_filename: device_facts.csv
    headers: Hostname,Device Type,TMOS Tersion,Platform,Serial Number,Software Version

  #roles: 
  #  #/////////////////////////////////////////////////////////////////
  #  #Role 1
  #  #Purpose of this role is to capture device facts and license related info
  #  #This information will be used to prepare devices for the upgrade
  #  #/////////////////////////////////////////////////////////////////  
  #- devicefacts_jinja2

  tasks:
  - name: Get bigip config Information
    bigip_device_info:
      gather_subset: 
      - system-info
      - devices
      - device-groups
      provider: "{{ bigip_provider }}"
    register: bigip_gather_var
    retries: 3
    delay: 3

  - name: Save CSV headers
    ansible.builtin.lineinfile:
      dest: "{{ csv_path }}/{{ csv_filename }}"
      line: "{{ headers }}"
      create: true
      state: present
    delegate_to: localhost
    run_once: true
    
  #- name: This can be used to print facts
  #  debug:
  #    var: bigip_gather_var
  
  - name: This can be used to print facts
    debug:
      var: bigip_gather_var['devices'][0]['hostname']

  - name: This can be used to print facts
    debug:
      var: bigip_gather_var['system_info']['marketing_name']

  - name: This can be used to print facts
    debug:
      var: bigip_gather_var['system_info']['product_version']

  - name: This can be used to print facts
    debug:
      var: bigip_gather_var['system_info']['platform']

  - name: This can be used to print facts
    debug:
      var: bigip_gather_var['system_info']['chassis_serial']

  - name: This can be used to print facts
    debug:
      var: bigip_gather_var['devices'][0]['software_version']

  - name: Build out CSV file
    ansible.builtin.lineinfile:
      dest: "{{ csv_path }}/{{ csv_filename }}"
      line: "{{ bigip_gather_var['devices'][0]['hostname'] }},{{ bigip_gather_var['system_info']['platform'] }},{{ bigip_gather_var['devices'][0]['software_version'] }},{{ bigip_gather_var['system_info']['platform'] }},{{ bigip_gather_var['system_info']['chassis_serial'] }},{{ bigip_gather_var['system_info']['product_version'] }}"
      create: true
      state: present
    delegate_to: localhost


  - name: Read in CSV to variable
    community.general.read_csv:
      path: "{{ csv_path }}/{{ csv_filename }}"
    register: csv_file
    delegate_to: localhost
    run_once: true

  - name: debug csv_file
    debug:
      var: csv_file
    run_once: true

#  - name: Send Email
#    community.general.mail:
#      host: "{{ email_host }}"
#      from: "{{ email_from }}"
#      port: 25
###############################
#      #using gmail
###############################
#      #port: 587
#      #username: <testuser>@gmail.com
#      #pasword: <your super secret password>
###############################
#      to: "{{ email_to }}"
#      subject: "[Ansible] {{ email_subject }}"
#      body: "{{ lookup('template', 'report.html.j2') }}"
#      attach: "{{ csv_path }}/{{ csv_filename }}"
#      subtype: html
#    delegate_to: localhost
#    run_once: true